import{o as e,c as t,r as s,a as n,b as i,w as r,v as o,d as a,e as d,f as l}from"./vendor.92a40e05.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(s){const n=new URL(e,location),i=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((s,r)=>{const o=new URL(e,n);if(self[t].moduleMap[o])return s(self[t].moduleMap[o]);const a=new Blob([`import * as m from '${o}';`,`${t}.moduleMap['${o}']=m;`],{type:"text/javascript"}),d=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(a),onerror(){r(new Error(`Failed to import: ${e}`)),i(d)},onload(){s(self[t].moduleMap[o]),i(d)}});document.head.appendChild(d)})),self[t].moduleMap={}}}("/mathGraphs/assets/");const c={name:"Canvas",inject:["finished"],provide(){return{provider:this.provider}},props:{sequence:{type:Array,default:()=>[5,2,5]},speed:{type:Number,default:()=>0},space:{type:Number,default:()=>0},showGrid:{type:Boolean,default:()=>!0},color:{type:Boolean,default:()=>!0}},data:()=>({provider:{context:null},sequenceIndex:0,startPointH:260,startPointV:260,currentPositionH:260,currentPositionV:260,movement:["right","up","left","down"],movementIndex:-1,drawInterval:null,strokeColors:["#222","purple","green","#F60","red","#00F","#0ff","#a52a2a","#00008B","#1E90FF","#DAA520","#FF00FF","#808000","#00FF7F","#9ACD32"]}),mounted(){this.provider.context=this.$refs["my-canvas"].getContext("2d"),window.addEventListener("resize",this.resizeCanvasAndStarUp),this.resizeCanvasAndStarUp()},updated(){this.finished.status||(clearInterval(this.drawInterval),this.resizeCanvasAndStarUp())},unmounted(){window.removeEventListener("resize",this.resizeCanvasAndStarUp)},methods:{resizeCanvasAndStarUp(){clearInterval(this.drawInterval);const e=Math.floor(this.$refs["my-canvas"].parentElement.clientWidth)||520;let t=Math.floor(this.$refs["my-canvas"].parentElement.clientHeight)||520;t>465&&(t=465),this.$refs["my-canvas"].width=e,this.$refs["my-canvas"].height=t,this.startPointH=Math.round(Math.floor(e/2)/this.space)*this.space,this.startPointV=Math.round(Math.floor(t/2)/this.space)*this.space,this.currentPositionH=this.startPointH,this.currentPositionV=this.startPointV,this.provider.context.clearRect(0,0,e,t),this.sequenceIndex=0,this.movementIndex=-1,this.showGrid&&this.createGrid(this.provider.context),this.color?this.changeColor(this.provider.context):this.provider.context.strokeStyle=this.strokeColors[0],this.startPoint(this.provider.context),this.startInterval()},startInterval(){this.drawInterval=setInterval((()=>{this.drawLine(this.provider.context,this.nextDirection()),this.checkEnd(),this.checkIndex()}),this.speed)},startPoint(e){e.fillStyle="red",e.fillRect(this.startPointH-5,this.startPointV-5,10,10),e.moveTo(this.startPointH,this.startPointV)},drawLine(e,t){e.beginPath(),e.moveTo(this.currentPositionH,this.currentPositionV),this.move(t),e.lineTo(this.currentPositionH,this.currentPositionV),e.stroke()},changeColor(e){e.strokeStyle=this.strokeColors[Math.floor(Math.random()*this.strokeColors.length)]},nextDirection(){return this.movementIndex++,this.movementIndex===this.movement.length&&(this.movementIndex=0),this.movement[this.movementIndex]},checkEnd(){this.currentPositionH===this.startPointH&&this.currentPositionV===this.startPointV&&this.sequenceIndex===this.sequence.length-1&&(clearInterval(this.drawInterval),this.finished.status=!0,console.log("Feedback for nerds like me... finished status is now true"))},checkIndex(){this.sequenceIndex===this.sequence.length-1?(this.color&&this.changeColor(this.provider.context),this.sequenceIndex=0):this.sequenceIndex++},move(e){switch(e){case"up":this.currentPositionV=this.currentPositionV-this.sequence[this.sequenceIndex]*this.space;break;case"right":this.currentPositionH=this.currentPositionH+this.sequence[this.sequenceIndex]*this.space;break;case"down":this.currentPositionV=this.currentPositionV+this.sequence[this.sequenceIndex]*this.space;break;case"left":this.currentPositionH=this.currentPositionH-this.sequence[this.sequenceIndex]*this.space}},createGrid(e){let t=this.$refs["my-canvas"].clientWidth;for(let s=1;s<t;s+=this.space)e.moveTo(s,0),e.lineTo(s,t);t=this.$refs["my-canvas"].clientWidth;for(let s=1;s<t;s+=this.space)e.moveTo(0,s),e.lineTo(t,s);e.moveTo(0,0),e.lineTo(this.$refs["my-canvas"].clientWidth,this.$refs["my-canvas"].clientHeight),e.strokeStyle="rgba(156, 163, 175, 0.3)",e.stroke()}}},h={id:"my-canvas",ref:"my-canvas",shadow:"lg",border:"rounded-xl"};c.render=function(s,n,i,r,o,a){return e(),t("canvas",h,null,512)};const u={name:"App",components:{Canvas:c},provide(){return{finished:s(this.finished)}},data:()=>({sequence:"3, 3, 9",speed:400,showGrid:!0,color:!0,space:20,finished:{status:!1}}),watch:{sequence:function(){this.finished.status=!1}},methods:{toArray:e=>e.replace(/ /g,"").split(","),redraw(){this.finished.status=!1}}},m={m:"x-auto",p:"y-12",bg:"white",text:"center",class:"container"},p={p:"x-4 sm:x-6 lg:x-8"},f=i("h2",{text:"base indigo-600 uppercase",font:"semibold tracking-wide"},[i("a",{href:"https://github.com/gentax/mathGraphs"},"go to github repo")],-1),g=i("p",{m:"t-2",text:"3xl gray-900 sm:4xl",font:"leading-8 extrabold tracking-tight"},"Beauty Graphs with math",-1),v={m:"t-10"},x={space:"y-10 md:y-0 md:x-10",grid:"md:cols-6",class:"md:grid"},y={m:"in-w-in"},w={shadow:"lg",border:"rounded-xl"},b={p:"x-2",font:"semibold"},q=i("div",{text:"lg base indigo-600 uppercase",font:"leading-6 medium semibold tracking-wide",align:"items-center",justify:"center",h:"12",class:"flex"},[i("svg",{h:"6",w:"6",class:"mr-2.5",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor","aria-hidden":"true"},[i("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"})]),d(" Settings ")],-1),P={text:"left",divide:"solid",font:"leading-10"},k={divide:"y light-grey-600"},I={p:"y-1",text:"gray-500"},C={for:"sequence"},V=d(" sequence "),H=i("small",{text:"gray-300"},"(try other sequence!)",-1),U={p:"y-1",text:"gray-500"},F={for:"speed"},G=d(" drawing speed "),M={p:"y-1",text:"gray-500"},A={for:"speed"},$=d(" Square width "),S={p:"y-1",text:"gray-500"},j={for:"showGrid"},T=d(" show grid "),E={p:"y-1",text:"gray-500"},L={for:"color"},R=d(" multicolor lines "),z={text:"light-blue-100"},D={key:0},B={key:1},W={grid:"col-span-1 md:col-span-5"},_=i("div",{text:"left xs",m:"t-10",bg:"gray-50",border:"rounded-3xl",p:"2 sm:5 xl:6"},[i("h2",{font:"semibold",text:"gray-900 xl"},"Rules"),i("h3",{text:"lg",m:"t-3"},"Sequence of numbers"),i("p",null,[d(" Cycle thought the sequence of numbers. Each number indicates how many units you need to move. Following the direction rules. the There is no limit to the amount of numbers you can use."),i("br"),d("And remember that... odd sequence are better and negative numbers are valid. ")]),i("h3",{text:"lg",m:"t-3"},"Direction"),i("p",null," Direction is a loop: first drawing direction is right, second one is up, third one to left, 4th to right. Than, start again. "),i("h3",{text:"lg",m:"t-3"},"Goal"),i("p",null,"If the last number of the sequence finish at the starting point, you reached the goal.")],-1),O=i("div",{m:"t-5",text:"gray-300",font:"semibold"},"Â©2020 gentax",-1);u.render=function(s,d,l,c,h,u){const N=n("Canvas");return e(),t("div",m,[i("div",p,[f,g,i("div",v,[i("div",x,[i("div",y,[i("div",w,[i("div",b,[q,i("div",P,[i("div",k,[i("div",I,[i("label",C,[V,r(i("input",{id:"sequence",ref:"sequence","onUpdate:modelValue":d[1]||(d[1]=e=>h.sequence=e),w:"full",flex:"none",bg:"gray-50",text:"gray-400 hover:gray-900",font:"mono leading-6",p:"y-1 x-1",border:"default gray-100 rounded-sm",align:"items-center",justify:"center",space:"x-2 sm:x-4",ring:"focus:2 focus:offset-2 focus:offset-white focus:gray-300",outline:"focus:none",transition:"colors duration-200",class:"flex"},null,512),[[o,h.sequence]]),H])]),i("div",U,[i("label",F,[G,r(i("input",{id:"speed",ref:"speed","onUpdate:modelValue":d[2]||(d[2]=e=>h.speed=e),type:"number",w:"full",flex:"none",bg:"gray-50",text:"gray-400 hover:gray-900",font:"mono leading-6",p:"y-1 x-1",border:"default gray-100 rounded-sm",align:"items-center",justify:"center",space:"x-2 sm:x-4",ring:"focus:2 focus:offset-2 focus:offset-white focus:gray-300",outline:"focus:none",transition:"colors duration-200",class:"flex",onChange:d[3]||(d[3]=(...e)=>u.redraw&&u.redraw(...e))},null,544),[[o,h.speed,void 0,{number:!0}]])])]),i("div",M,[i("label",A,[$,r(i("input",{id:"space",ref:"space","onUpdate:modelValue":d[4]||(d[4]=e=>h.space=e),type:"number",w:"full",flex:"none",bg:"gray-50",text:"gray-400 hover:gray-900",font:"mono leading-6",p:"y-1 x-1",border:"default gray-100 rounded-sm",align:"items-center",justify:"center",space:"x-2 sm:x-4",ring:"focus:2 focus:offset-2 focus:offset-white focus:gray-300",outline:"focus:none",transition:"colors duration-200",class:"flex",onChange:d[5]||(d[5]=(...e)=>u.redraw&&u.redraw(...e))},null,544),[[o,h.space,void 0,{number:!0}]])])]),i("div",S,[i("label",j,[T,r(i("input",{id:"showGrid",ref:"showGrid","onUpdate:modelValue":d[6]||(d[6]=e=>h.showGrid=e),type:"checkbox",onChange:d[7]||(d[7]=(...e)=>u.redraw&&u.redraw(...e))},null,544),[[a,h.showGrid]])])]),i("div",E,[i("label",L,[R,r(i("input",{id:"color",ref:"color","onUpdate:modelValue":d[8]||(d[8]=e=>h.color=e),type:"checkbox",onChange:d[9]||(d[9]=(...e)=>u.redraw&&u.redraw(...e))},null,544),[[a,h.color]])])])])])]),i("div",{text:"center white",space:"x-2",p:"2",bg:"gradient-to-br",border:"rounded-b-xl",font:"leading-6 semibold",class:{"from-blue-200 to-indigo-500":!h.finished.status,"from-blue-400 to-indigo-700":h.finished.status}},[i("p",z,[h.finished.status?(e(),t("span",D,"Completed")):(e(),t("span",B,"Drawing"))])],2)])]),i("div",W,[i(N,{sequence:u.toArray(h.sequence),speed:h.speed,"show-grid":h.showGrid,color:h.color,space:h.space,shadow:"lg",border:"rounded-xl"},null,8,["sequence","speed","show-grid","color","space"])])])]),_,O])])};l(u).mount("#app");
